# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthUser {
  description: String
  display_name: String
  id: ID!
  profile_image: String
  role: String!
  username: String!
}

type Author {
  author_id: Int!
  biography: String
  books: [Book!]
  deleted_at: DateTime
  name_author: String!
  photo: String
}

type Book {
  author: Author
  author_id: Int
  book_id: Int!
  deleted_at: DateTime
  description: String
  photo: String
  reviews: [Review!]
  title: String!
}

type BookRating {
  averageRating: Float!
  totalReviews: Int!
}

input CreateAuthorDto {
  biography: String
  name_author: String!
  photo: String
}

input CreateBookDto {
  author_id: Int!
  description: String
  photo: String
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FavoriteResponse {
  message: String!
  success: Boolean!
}

type Loan {
  book: Book
  book_id: Int!
  days_remaining: Int!
  description: String
  due_date: DateTime
  fine_amount: Float!
  hours_remaining: Int!
  is_overdue: Boolean!
  loan_date: DateTime!
  loans_id: ID!
  photo: String
  returned_at: DateTime
  time_remaining: String!
  title: String!
  user_id: Int!
  username: String!
}

type LoanStatus {
  isRented: Boolean!
  loan: Loan
}

input LoginInput {
  password: String!
  username: String!
}

type LoginResponse {
  token: String!
  user: AuthUser!
}

type Mutation {
  addToFavorites(bookId: Int!): FavoriteResponse!
  createAuthor(createAuthorInput: CreateAuthorDto!): Author!
  createBook(createBookInput: CreateBookDto!): Book!
  createReview(bookId: Int!, comment: String, rating: Int!): Review!
  login(loginInput: LoginInput!): LoginResponse!
  register(registerInput: RegisterInput!): AuthUser!
  removeAuthor(id: Int!): Boolean!
  removeBook(id: Int!): Boolean!
  rentBook(bookId: Int!): Loan!
  restoreAuthor(id: Int!): Boolean!
  restoreBook(id: Int!): Boolean!
  returnBook(loanId: Int!): Boolean!
  updateAuthor(id: Int!, updateAuthorInput: UpdateAuthorDto!): Author!
  updateBook(id: Int!, updateBookInput: UpdateBookDto!): Book!
  updateProfile(updateProfileInput: UpdateProfileInput!): UserProfile!
  uploadBookImage(bookId: Int!, file: Upload!): Book!
}

type Query {
  allLoans: [Loan!]!
  author(id: Int!): Author!
  authors(includeDeleted: Boolean, limit: Int, page: Int): [Author!]!
  authorsCount: Int!
  book(id: Int!): Book!
  bookLoanStatus(bookId: Int!): LoanStatus!
  bookRating(bookId: Int!): BookRating!
  bookReviews(bookId: Int!): [Review!]!
  books(includeDeleted: Boolean, limit: Int, page: Int, search: String): [Book!]!
  booksCount: Int!
  me: UserProfile!
  myBookLoan(bookId: Int!): UserLoanStatus!
  myBookReview(bookId: Int!): Review
  myFavoriteBook: UserFavorite!
  myLoans: [Loan!]!
  overdueLoans: [Loan!]!
}

input RegisterInput {
  password: String!
  role: String
  username: String!
}

type Review {
  book: Book
  book_id: Int!
  comment: String
  created_at: DateTime!
  id: Int!
  rating: Int!
  user: ReviewUser
  user_id: Int!
}

type ReviewUser {
  photo: String
  username: String!
}

input UpdateAuthorDto {
  biography: String
  name_author: String
  photo: String
}

input UpdateBookDto {
  author_id: Int
  description: String
  photo: String
  title: String
}

input UpdateProfileInput {
  description: String
  display_name: String
  profile_image: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserFavorite {
  favoriteBook: Book
}

type UserLoanStatus {
  hasLoan: Boolean!
  loan: Loan
}

type UserProfile {
  description: String
  display_name: String
  email: String!
  id: ID!
  profile_image: String
  role: String!
  username: String!
}